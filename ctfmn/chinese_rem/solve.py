from sympy.ntheory.modular import crt

# Given values
n1 = 9214257969031424377850855587809003545415652348158749783064416934350607770839674218793860866042417927019748069986217762115841142902202676199926388956796621
n2 = 13068463612395091169229765564434190111967782072006560558380114488335510852864750164059091761530261938280129149700843543406201570783679107318140390010127327
n3 = 10713563972022655568590699532584620792735438282033634953718849243309473678969342171372129441523047735566181957158331025484302656743156765390049084148602721
a1 = 5407720843997383544166999984983304910812447362908131441426105961500413981413956197079850303842188298121250101699187037806878621743083310974590923140192054
a2 = 1571238672627807445918563706940700094258218152014595496630968753112724083300623901455972699786594635378546322871904861235783826158161004804578022234661310
a3 = 1211598559640021132967035018753367451465439033808076954192668665996856412829780096655787201559430227690099146067960967694929019762483931980781616117090100

moduli = [n1, n2, n3]
remainders = [a1, a2, a3]

x, _ = crt(moduli, remainders)
print("Solution x:", x)
import gmpy2
x = gmpy2.iroot(x,3)[0]
print(x)

from Crypto.Util.number import *
print(long_to_bytes(x))